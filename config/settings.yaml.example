# REVIEW_MODE — how AI review comments will be posted:
# "comment" = one general comment on the PR
# "inline" = line-by-line inline comments
REVIEW_MODE: "inline"

GIT_PROVIDER_CONFIG:
  # GIT_PROVIDER — which git hosting service you use:
  # "github"
  # "gitea"
  GIT_PROVIDER: "gitea"
  # GIT_PROVIDER_USER_TOKEN — personal access token of the bot/user to access API
  GIT_PROVIDER_USER_TOKEN: "asdasdasd"
  # GIT_PROVIDER_URL — base URL of your git server
  GIT_PROVIDER_URL: "https://example.com"
  # GIT_PROVIDER_SECRET_TOKEN — secret token to validate incoming webhooks
  GIT_PROVIDER_SECRET_TOKEN: "asdasdasd"

AI_PROVIDER_CONFIG:
  # AI_PROVIDER — which AI API you use:
  # "openai" (official Responses API)
  # "openai_compatible" (Compatible Chat Completion API: openrouter, lmstudio, etc...)
  # "gigachat"
  AI_PROVIDER: "openai"
  # AI_PROVIDER_API_KEY — API key to authenticate with AI provider
  AI_PROVIDER_API_KEY: "aasdasdasd"
  # AI_PROVIDER_MODEL — which model to use for code review (gpt-4.1-mini, gpt-4o, gpt-3.5-turbo, etc...)
  AI_PROVIDER_MODEL: "gpt-4.1-mini"
  # AI_PROVIDER_BASE_URL — base URL for OpenAI-compatible providers
  # (useful when you run your own LLM API or use third-party endpoints like OpenRouter, LocalAI, LM Studio, etc.)
  AI_PROVIDER_BASE_URL: "https://example.com/v1"
  # AI_PROVIDER_SCOPE — required only for GigaChat API (scope parameter used for authorization)
  AI_PROVIDER_SCOPE: "GIGACHAT_API_PERS"

# logger
# LOG_LEVEL — log detail level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL: "INFO"
