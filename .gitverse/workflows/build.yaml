name: Build Project

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-cloud-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --frozen
          uv run pre-commit install

      - name: Lint pre-commit
        run: uv run pre-commit run --all-files --hook-stage manual

      - name: Run Telegram Notify Action
        uses: proDreams/actions-telegram-notifier@main
        if: always()
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_THREAD_ID }}
          status: ${{ job.status }}
          notify_fields: "actor,repository,branch,commit"
          message: "Job: pre-commit linters"

  build-and-push:
    needs: lint

    runs-on: ubuntu-cloud-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitVerse Container Registry
        uses: docker/login-action@v3
        with:
          registry: gitverse.ru
          username: ${{ vars.GV_USERNAME }}
          password: ${{ secrets.GV_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=registry,ref=gitverse.ru/prodreams/revu:latest
          cache-to: type=inline
          tags: |
            gitverse.ru/prodreams/revu:latest
            gitverse.ru/prodreams/revu:${{ steps.get_version.outputs.version }}


      - name: Run Telegram Notify Action
        uses: proDreams/actions-telegram-notifier@main
        if: always()
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_THREAD_ID }}
          status: ${{ job.status }}
          notify_fields: "actor,repository,branch,commit"
          message: "Job: Build Image"
